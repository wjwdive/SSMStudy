<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!--  Mybatis 中的标签配置顺序  
he content of element type "configuration" must match 
"(properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,
reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?)".
-->

    <properties resource="jdbc.properties" />
<!--
    typeAliases: 设置类型别名，即为具体的类型设置一个别名，在MyBatis的范围中，就可以使用别名表示一个具体的类型
-->
    <typeAliases>
<!--
    type: 设置需要起别名的类型
    alias: 设置某个类型的别名， 【不区分大小写】
    若不设置alias, 当前的类型拥有默认的别名，且不区分大小写
-->
<!--        <typeAlias type="com.wjw.mybatis.pojo.User" alias="User"></typeAlias>-->
<!--        通过包来设置类型别名，指定包下的所有的类型将全部拥有默认的别名。-->
        <package name="com.wjw.mybatis.pojo"/>
    </typeAliases>

<!--    配置连接数据库的函数-->
    <environments default="test">
        <environment id="development">
<!--            事务管理器 JDBC-->
            <transactionManager type="JDBC"/>
<!--            数据源类型-->
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="0000"/>

            </dataSource>
        </environment>

<!--        配置多个环境，若要用test环境，在environments default="test"-->
        <environment id="test">
            <!--            事务管理器 JDBC|MANAGED
                JDBC: 表示使用JDBC中原生的事务管理方式
                MANAGED: 被管理，例如Spring,中AOP事务。Mybatis实现的事务交给Spring来管理
            -->
            <transactionManager type="JDBC"/>
            <!--      dataSource：设置数据源类型
                属性：
                type: 设置数据源的类型 3种
                POOLED: 表示使用数据库连接池
                UNPOOLED: 表示不使用数据库连接池
                JNDI: 表示使用上下文中的数据库
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
<!--    引入mybatis的映射文件-->
    <mappers>
<!--        <mapper resource="mappers/UserMapper.xml"/>-->
<!--        通过包来引入映射文件，但是必须满足：
            1，mapper接口和映射文件所在的包必须一致
            2，mapper接口的名字和映射文件的名字必须一致
            创建UserMapper.xml 这个资源文件的包路径时，必须是 com/wjw/mybatis/mapper
-->
        <package name="com.wjw.mybatis.mapper"/>
<!--        变异后，resources和class就在统一目录下了，在target->calss->...  下 -->
    </mappers>
</configuration>